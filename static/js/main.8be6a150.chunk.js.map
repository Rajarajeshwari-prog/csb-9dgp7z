{"version":3,"sources":["form.js","App.js","index.js"],"names":["Register","validator","useRef","SimpleReactValidator","useState","forceUpdate","FirstName","setFirstName","LastName","setLastName","Email","setEmail","Password","setPassword","dob","setDob","Phone","setPhone","className","onChange","e","target","value","name","type","placeholder","current","message","onClick","allValid","alert","console","log","email","password","firstName","lastName","phone","date","showMessages","App","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.8be6a150.chunk.js","sourcesContent":["import { useState, useRef } from \"react\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\n\r\nconst Register = () => {\r\n  const validator = useRef(new SimpleReactValidator());\r\n  const [, forceUpdate] = useState(\"\");\r\n\r\n  const [FirstName, setFirstName] = useState(\"\");\r\n  const [LastName, setLastName] = useState(\"\");\r\n  const [Email, setEmail] = useState(\"\");\r\n  const [Password, setPassword] = useState(\"\");\r\n  const [dob, setDob] = useState(\"\");\r\n  const [Phone, setPhone] = useState(\"\");\r\n\r\n  const handleSubmit = () => {\r\n    if (validator.current.allValid()) {\r\n      alert(\"You submitted Details!\");\r\n      console.log({\r\n        email: Email,\r\n        password: Password,\r\n        firstName: FirstName,\r\n        lastName: LastName,\r\n        phone: Phone,\r\n        date: dob\r\n      });\r\n    } else {\r\n      validator.current.showMessages();\r\n      forceUpdate();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid p-3\">\r\n      <div className=\"card bg-dark text-white m-5 border border-white border-4 \">\r\n        <div className=\"card-body rounded\">\r\n          <h1 className=\"text-center\">Register</h1>\r\n          <div className=\"row g-3 form\">\r\n            <div className=\"row g-3 \">\r\n              <label className=\"form-label\">Name</label>\r\n              <div className=\"col-md-6\">\r\n                <input\r\n                  onChange={(e) => setFirstName(e.target.value)}\r\n                  name=\"FirstName\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"First Name\"\r\n                  value={FirstName}\r\n                />\r\n                {validator.current.message(\r\n                  \"First name\",\r\n                  FirstName,\r\n                  \"required|alpha|min:3\"\r\n                )}\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <input\r\n                  name=\"LastName\"\r\n                  onChange={(e) => setLastName(e.target.value)}\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Last Name\"\r\n                />\r\n                {validator.current.message(\r\n                  \"last name\",\r\n                  LastName,\r\n                  \"required|alpha|min:3\"\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <label className=\"form-label\">Date Of Birth</label>\r\n              <input\r\n                onChange={(e) => setDob(e.target.value)}\r\n                name=\"DateOfBirth\"\r\n                type=\"date\"\r\n                className=\"form-control\"\r\n              />\r\n              {validator.current.message(\"Date of birth\", dob, \"required\")}\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <label className=\"form-label\">Phone</label>\r\n              <input\r\n                onChange={(e) => setPhone(e.target.value)}\r\n                name=\"Phone\"\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n              />\r\n              {validator.current.message(\"Phone\", Phone, \"required\")}\r\n            </div>\r\n\r\n            <div className=\"col-md-6\">\r\n              <label className=\"form-label\">Email</label>\r\n              <input\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                name=\"Email\"\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                placeholder=\"XYZ@example.com\"\r\n              />\r\n              {validator.current.message(\"Email\", Email, \"required|email\")}\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <label className=\"form-label\">Password</label>\r\n              <input\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                name=\"Password\"\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Password\"\r\n              />\r\n              {validator.current.message(\r\n                \"title\",\r\n                Password,\r\n                \"required|^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[*.!@$%^&(){}[]:;<>,.?/~_+-=|]).{8,32}$\"\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"col-12 text-center\">\r\n              <button\r\n                type=\"submit\"\r\n                onClick={handleSubmit}\r\n                className=\"btn btn-primary\"\r\n              >\r\n                <b>Submit</b>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import \"./styles.css\";\nimport Register from \"./form.js\";\n\nexport default function App() {\n  return <Register />;\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}